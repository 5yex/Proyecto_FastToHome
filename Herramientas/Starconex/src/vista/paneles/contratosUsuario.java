/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista.paneles;

import controlador.conexion;
import controlador.contratosDAO;
import controlador.tarifaDAO;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.contrato;
import modelo.tarifa;
import modelo.usuario;

/**
 *
 * @author JM
 */
public class contratosUsuario extends javax.swing.JPanel {

    private usuario usuarioActual;
    private conexion conex;

    /**
     * Creates new form informacionUsuario
     *
     * @param user
     * @param conex
     */
    public contratosUsuario(usuario user, conexion conex) {
        initComponents();
        this.conex = conex;
        this.usuarioActual = user;
        mostrarContenido();

    }

    private void mostrarContenido() {
        actualizar();
        recargarTablaEmpleados(contratosDAO.obtenerContratos(conex, usuarioActual));
    }

    public void recargarTablaEmpleados(ArrayList<contrato> listaContratos) {
        tablaContratos.setModel(
                new DefaultTableModel(null, new String[]{"Número", "Se firmó el:", "Estado", "Tarifa", "Velocidad", "Permanencia", "CONTRATO ACTIVO","PRECIO"}) {
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        });
        //tablaEmpleados.getColumnModel().getColumn(0).setMaxWidth(60);
        //tablaEmpleados.getColumnModel().getColumn(2).setMinWidth(100);
        tablaContratos.setAutoCreateRowSorter(true);
        for (contrato contratoTmp : listaContratos) {
            DefaultTableModel model = (DefaultTableModel) tablaContratos.getModel();
            model.addRow(contrato2row(contratoTmp, tarifaDAO.obtenerTarifa(conex, contratoTmp.getId_tarifa())));
            System.out.println("vista.paneles.contratosUsuario.recargarTablaEmpleados()");
        }
    }

    public Object[] contrato2row(contrato contrato, tarifa tarifa) {
        return new Object[]{contrato.getId(), contrato.getFecha(), contrato.getEstado_servicio(), tarifa.getId(), tarifa.getVelocidad(), tarifa.isPermanencia(), contrato.getEn_vigor(),tarifa.getPrecio()};
    }

    private void actualizar() {
        usuarioActual = controlador.usuarioDAO.obtenerUsuarioPricipal(conex, usuarioActual);
    }

    private void edicionUsuario() {
//        usuario usuarioEditado = usuarioActual;
//        usuarioEditado.setNombre(nombre.getText());
//        usuarioEditado.setApellidos(apellidos.getText());
//        usuarioEditado.setTelefono(telefono.getText());
//        if (controlador.usuarioDAO.editarUsuario(conex, usuarioActual)) {
//            actualizar();
//            mostrarContenido();
//            JOptionPane.showMessageDialog(null, "Información actualizada Correctamente");
//        }
//        actualizar();
//        mostrarContenido();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaContratos = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();

        setForeground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(626, 171));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(626, 171));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        title.setBackground(new java.awt.Color(239, 246, 253));
        title.setFont(new java.awt.Font("Roboto Black", 3, 14)); // NOI18N
        title.setText("TUS CONTRATOS:");
        add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 160, 20));

        jButton1.setText("MÁS INFORMACIÓN");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 30, 160, -1));

        tablaContratos.setModel(new javax.swing.table.DefaultTableModel(
            null,
            new String [] {
                "Número", "Nombre", "Localización"
            }
        ));
        tablaContratos.setShowGrid(true);
        jScrollPane1.setViewportView(tablaContratos);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 580, 110));

        jButton2.setText("DAR DE BAJA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, 120, -1));

        jToggleButton1.setText("ACTUALIZAR");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        add(jToggleButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        edicionUsuario();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        bajaContrato();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        mostrarContenido();
    }//GEN-LAST:event_jToggleButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTable tablaContratos;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables

    private void bajaContrato() {
        if (tablaContratos.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "TIENES QUE SELECCIONAR UN CONTRATO!", "Starconex: ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            if ((Boolean) tablaContratos.getModel().getValueAt(tablaContratos.getSelectedRow(), 6) == false) {
                JOptionPane.showMessageDialog(this, "ESTE CONTRATO YA HA TERMINADO!", "Starconex: ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                int decision = JOptionPane.showOptionDialog(
                        this,
                        "SEGURO QUE DESEA DAR DE BAJA EL CONTRATO SELECCIONADO?",
                        "Starconex: SEGURO QUE DESEA DAR DE BAJA EL CONTRATO SELECCIONADO?",
                        JOptionPane.YES_NO_CANCEL_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null, // null para icono por defecto.
                        new Object[]{"NO DAR DE BAJA", "SÍ DAR DE BAJA"}, // null para YES, NO y CANCEL
                        "NO DAR DE BAJA");
                if (decision == 1) {
                    contratosDAO.baja(conex, (int) tablaContratos.getModel().getValueAt(tablaContratos.getSelectedRow(), 0));
                    recargarTablaEmpleados(contratosDAO.obtenerContratos(conex, usuarioActual));
                }
            }
        }
    }
}
